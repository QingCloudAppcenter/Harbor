{
  "type": "array",
  "properties": [{
    "key": "cluster",
    "description": "properties",
    "type": "array",
    "properties": [{
      "key": "name",
      "label": "name",
      "description": "The name of the Harbor service",
      "type": "string",
      "default": "Harbor",
      "required": "no"
    }, {
      "key": "description",
      "label": "Description",
      "description": "The description of the Harbor service",
      "type": "string",
      "default": "",
      "required": "no"
    }, {
      "key": "vxnet",
      "label": "vxnet",
      "description": "Choose a vxnet to join",
      "type": "string",
      "default": "",
      "required": "yes"
    }, {
      "key": "web_node",
      "description": "",
      "label": "web_node",
      "type": "array",
      "properties": [{
        "key": "loadbalancer",
        "label": "Loadbalancer",
        "description": "Choose a loadbalancer with a listener",
        "type": "loadbalancer",
        "port": 80,
        "default": [],
        "required": "yes"
      }, {
        "key": "cpu",
        "label": "CPU",
        "description": "CPUs of each node",
        "type": "integer",
        "default": 2,
        "range": [
          1,
          2,
          4,
          8
        ],
        "required": "yes"
      }, {
        "key": "memory",
        "label": "Memory",
        "description": "Memory of each node",
        "type": "integer",
        "default": 1024,
        "range": [
          1024,
          2048,
          4096,
          8192
        ],
        "required": "yes"
      }, {
        "key": "count",
        "label": "Count",
        "description": "Number of nodes for the cluster to create",
        "type": "integer",
        "default": 2,
        "max": 100,
        "min": 1,
        "required": "yes"
      }, {
        "key": "instance_class",
        "label": "Instance Class",
        "description": "The instance type for the cluster to run, such as high performance, high performance plus",
        "type": "integer",
        "default": 0,
        "range": [
          0,
          1
        ],
        "required": "yes"
      }]
    }, {
      "key": "db_node",
      "description": "",
      "label": "db_node",
      "type": "array",
      "properties": [{
        "key": "cpu",
        "label": "CPU",
        "description": "CPUs of each node",
        "type": "integer",
        "default": 1,
        "range": [
          1,
          2,
          4,
          8
        ],
        "required": "yes"
      }, {
        "key": "memory",
        "label": "Memory",
        "description": "Memory of each node",
        "type": "integer",
        "default": 1024,
        "range": [
          1024,
          2048,
          4096,
          8192
        ],
        "required": "yes"
      }, {
        "key": "instance_class",
        "label": "Instance Class",
        "description": "The instance type for the cluster to run, such as high performance, high performance plus",
        "type": "integer",
        "default": 0,
        "range": [
          0,
          1
        ],
        "required": "yes"
      }, {
        "key": "volume_class",
        "label": "Volume Class",
        "description": "The volume type for each instance,such as high performance,high performance plus",
        "type": "integer",
        "default": 0,
        "range": [
          0,
          3
        ],
        "required": "yes"
      }, {
        "key": "volume_size",
        "label": "Volume Size",
        "description": "The volume size for each instance",
        "type": "integer",
        "default": 10,
        "min": 10,
        "max": 1000,
        "step": 10,
        "required": "yes"
      }]
    }, {
      "key": "cache_node",
      "description": "",
      "label": "cache_node",
      "type": "array",
      "properties": [{
        "key": "cpu",
        "label": "CPU",
        "description": "CPUs of each node",
        "type": "integer",
        "default": 1,
        "range": [
          1,
          2
        ],
        "required": "yes"
      }, {
        "key": "memory",
        "label": "Memory",
        "description": "Memory of each node",
        "type": "integer",
        "default": 1024,
        "range": [
          1024,
          2048,
          4096,
          8192
        ],
        "required": "yes"
      }, {
        "key": "instance_class",
        "label": "Instance Class",
        "description": "The instance type for the cluster to run, such as high performance, high performance plus",
        "type": "integer",
        "default": 0,
        "range": [
          0,
          1
        ],
        "required": "yes"
      }]
    }, {
      "key": "storage_node",
      "description": "",
      "label": "storage_node",
      "type": "array",
      "properties": [{
        "key": "cpu",
        "label": "CPU",
        "description": "CPUs of each node",
        "type": "integer",
        "default": 2,
        "range": [
          1,
          2,
          4,
          8
        ],
        "required": "yes"
      }, {
        "key": "memory",
        "label": "Memory",
        "description": "Memory of each node",
        "type": "integer",
        "default": 1024,
        "range": [
          1024,
          2048,
          4096,
          8192
        ],
        "required": "yes"
      }, {
        "key": "count",
        "label": "Count",
        "description": "If QingStor will be used as Harbor's backend, then DO NOT create this node; otherwise please create one; default to 0 meaning not to create",
        "type": "integer",
        "default": 0,
        "max": 1,
        "min": 0,
        "changeable": false,
        "required": "yes"
      }, {
        "key": "instance_class",
        "label": "Instance Class",
        "description": "The instance type for the cluster to run, such as high performance, high performance plus",
        "type": "integer",
        "default": 0,
        "range": [
          0,
          1
        ],
        "required": "yes"
      }, {
        "key": "volume_class",
        "label": "Volume Class",
        "description": "The volume type for each instance,such as high performance,high performance plus",
        "type": "integer",
        "default": 0,
        "range": [
          0,
          3
        ],
        "required": "yes"
      }, {
        "key": "volume_size",
        "label": "Volume Size",
        "description": "The volume size for each instance",
        "type": "integer",
        "default": 50,
        "min": 10,
        "max": 1000,
        "step": 10,
        "required": "yes"
      }]
    }, {
      "key": "job_node",
      "description": "",
      "label": "job_node",
      "type": "array",
      "properties": [{
        "key": "cpu",
        "label": "CPU",
        "description": "CPUs of each node",
        "type": "integer",
        "default": 2,
        "range": [
          1,
          2,
          4,
          8
        ],
        "required": "yes"
      }, {
        "key": "memory",
        "label": "Memory",
        "description": "Memory of each node",
        "type": "integer",
        "default": 2048,
        "range": [
          1024,
          2048,
          4096,
          8192,
          16384
        ],
        "required": "yes"
      }, {
        "key": "count",
        "label": "Count",
        "description": "Number of nodes for replica cluster to create",
        "type": "integer",
        "default": 0,
        "max": 1,
        "min": 0,
        "required": "yes"
      }, {
        "key": "instance_class",
        "label": "Instance Class",
        "description": "The instance type for the cluster to run, such as high performance, high performance plus",
        "type": "integer",
        "default": 0,
        "range": [
          0,
          1
        ],
        "required": "yes"
      }]
    }, {
      "key": "log_node",
      "description": "",
      "label": "log_node",
      "type": "array",
      "properties": [{
        "key": "cpu",
        "label": "CPU",
        "description": "CPUs of each node",
        "type": "integer",
        "default": 2,
        "range": [
          1,
          2,
          4,
          8
        ],
        "required": "yes"
      }, {
        "key": "memory",
        "label": "Memory",
        "description": "Memory of each node",
        "type": "integer",
        "default": 1024,
        "range": [
          1024,
          2048,
          4096,
          8192
        ],
        "required": "yes"
      }, {
        "key": "instance_class",
        "label": "Instance Class",
        "description": "The instance type for the cluster to run, such as high performance, high performance plus",
        "type": "integer",
        "default": 0,
        "range": [
          0,
          1
        ],
        "required": "yes"
      }, {
        "key": "volume_class",
        "label": "Volume Class",
        "description": "The volume type for each instance,such as high performance,high performance plus",
        "type": "integer",
        "default": 0,
        "range": [
          0,
          3
        ],
        "required": "yes"
      }, {
        "key": "volume_size",
        "label": "Volume Size",
        "description": "The volume size for each instance",
        "type": "integer",
        "default": 10,
        "min": 10,
        "max": 1000,
        "step": 10,
        "required": "yes"
      }]
    }]
  }, {
    "key": "env",
    "description": "Configuration properties",
    "type": "array",
    "properties": [{
      "key": "HARBOR_HOST",
      "label": "HARBOR_HOST",
      "description": "The address of harbor service, e.g. https://harbor.example.com (notice not to end with slash '/')",
      "type": "string",
      "changeable": true,
      "default": "http://127.0.0.1",
      "pattern": "^https?://[^:/]+(:[0-9]+)?$",
      "required": "yes"
    }, {
      "key": "QS_ACCESS",
      "label": "QS_ACCESS",
      "description": "Provide the accesskey to connect QingStor for storing Image data; keep untouched if not using QingStor",
      "type": "string",
      "changeable": true,
      "default": "accesskey",
      "required": "yes"
    }, {
      "key": "QS_SECRET",
      "label": "QS_SECRET",
      "description": "Provide the secretkey to connect QingStor for storing Image data; keep untouched if not using QingStor",
      "type": "password",
      "changeable": true,
      "default": "secretkey",
      "required": "yes"
    }, {
      "key": "QS_BUCKET",
      "label": "QS_BUCKET",
      "description": "Provide the bucket name to use; keep untouched if not using QingStor",
      "type": "string",
      "changeable": false,
      "default": "harbor",
      "required": "yes"
    }, {
      "key": "QS_ROOT_DIRECTORY",
      "label": "QS_ROOT_DIRECTORY",
      "description": "The root direcotry or prefix for Harbor image storage; keep untouched if not using QingStor",
      "type": "string",
      "changeable": false,
      "default": "registry-root",
      "required": "yes"
    }, {
      "key": "QS_ZONE",
      "label": "QS_ZONE",
      "description": "Provide the zone of bucket to use",
      "type": "string",
      "changeable": true,
      "default": "pek3a",
      "required": "no"
    }, {
      "key": "QS_URL",
      "label": "QS_URL",
      "description": "Provide the Address of QingStor",
      "type": "string",
      "changeable": true,
      "default": "https://qingstor.com",
      "required": "no"
    }, {
      "key": "REGISTRY_READONLY",
      "label": "REGISTRY_READONLY",
      "description": "Turn on readonly mode,only allow pull action",
      "type": "boolean",
      "changeable": true,
      "default": false,
      "required": "no"
    }]
  }]
}
