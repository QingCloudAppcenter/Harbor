---
- hosts: appcenter
  vars:
    harborVersion: v1.7.5
    appAgentVersion: v1.0.6
    containerdVersion: 1.2.4
    dockerVersion: 18.09.3
    dockerComposeVersion: 1.23.1

  tasks:
    - name: Copy confd toml files
      copy:
        src: files/etc/confd/conf.d/make.sh.toml
        dest: /etc/confd/conf.d/make.sh.toml

    - file: path=files/tmp/confd-tmpl state=absent
      delegate_to: localhost
      run_once: True

    - file: path=files/tmp/confd-tmpl state=directory
      delegate_to: localhost
      run_once: True

    - name: Copy tmpl files
      vars:
        srcDir: files/etc/confd/templates/
        destDir: files/tmp/confd-tmpl/
      copy:
        src: "{{ srcDir }}"
        dest: "{{ destDir }}"
      delegate_to: localhost
      run_once: True

    - name: Generate tmpl files
      template:
        src: "{{ item }}"
        dest: files/tmp/confd-tmpl/{{ item | basename | regex_replace('\.j2','') }}
      with_fileglob:
        - templates/etc/confd/templates/*.j2
      delegate_to: localhost
      run_once: True

    - name: Compile tmpl files
      shell: |
        dir=files/tmp/confd-tmpl
        tmplFile=$dir/make.sh.tmpl
        for tmpl in $(ls $dir/*); do
          cat $tmpl >> $tmplFile
          echo "# << templates from `basename $tmpl`" >> $tmplFile
        done
      args:
        executable: /bin/bash
      delegate_to: localhost
      run_once: True

    - name: Copy confd tmpl files
      copy:
        src: files/tmp/confd-tmpl/make.sh.tmpl
        dest: /etc/confd/templates/make.sh.tmpl

    - name: Copy Docker registry mirror configuration file to speed up image pulling
      copy:
        src: files/etc/docker/
        dest: /etc/docker/
        directory_mode: yes

    - name: Copy binaries
      copy:
        src: files/opt/
        dest: /opt/
        directory_mode: yes

    - name: Install tools
      apt:
        update_cache: yes
        name: ['nfs-common', 'python3-pip']
        state: present

    - name: Install docker-py
      pip:
        name: docker-py

    # - name: Restart Docker Daemon to respect registry mirror configuration
    #   service:
    #     name: docker
    #     state: restarted

    - name: Download reusable containerd binaries locally
      get_url:
        url: "https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/containerd.io_{{ containerdVersion }}-1_amd64.deb"
        dest: "files/tmp/containerd-{{ containerdVersion }}.deb"
      delegate_to: localhost

    - name: Download reusable Docker CE CLI binaries locally
      get_url:
        url: "https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/docker-ce-cli_{{ dockerVersion }}~3-0~ubuntu-xenial_amd64.deb"
        dest: "files/tmp/docker-ce-cli-{{ dockerVersion }}.deb"
      delegate_to: localhost

    - name: Download reusable Docker CE binaries locally
      get_url:
        url: "https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/docker-ce_{{ dockerVersion }}~3-0~ubuntu-xenial_amd64.deb"
        dest: "files/tmp/docker-ce-{{ dockerVersion }}.deb"
      delegate_to: localhost

    - name: Copy Docker binaries
      copy:
        src: "files/tmp/{{ item }}"
        dest: "/tmp/{{ item }}"
      with_items:
        - "containerd-{{ containerdVersion }}.deb"
        - "docker-ce-cli-{{ dockerVersion }}.deb"
        - "docker-ce-{{ dockerVersion }}.deb"

    - name: Install Docker
      apt:
        deb: "/tmp/{{ item }}.deb"
        state: present
      with_items:
        - "containerd-{{ containerdVersion }}"
        - "docker-ce-cli-{{ dockerVersion }}"
        - "docker-ce-{{ dockerVersion }}"

    - name: Pull Docker Images
      # retries: 3
      # delay: 3
      docker_image:
        name: "{{ item }}"
      with_items:
        - "vmware/harbor-db-migrator:1.3"
        - "goharbor/harbor-migrator:v1.6.0"
        - "goharbor/harbor-migrator:{{ harborVersion }}"
        - "goharbor/redis-photon:{{ harborVersion }}"
        - "goharbor/harbor-registryctl:{{ harborVersion }}"
        - "goharbor/registry-photon:v2.6.2-{{ harborVersion }}"
        - "goharbor/nginx-photon:{{ harborVersion }}"
        - "goharbor/harbor-log:{{ harborVersion }}"
        - "goharbor/harbor-jobservice:{{ harborVersion }}"
        - "goharbor/harbor-core:{{ harborVersion }}"
        - "goharbor/harbor-portal:{{ harborVersion }}"
        - "goharbor/harbor-adminserver:{{ harborVersion }}"
        - "goharbor/harbor-db:{{ harborVersion }}"
        - "goharbor/chartmuseum-photon:v0.8.1-{{ harborVersion }}"
        - "erichough/nfs-server:2.2.1"

    - name: Download reusable Docker Compose binaries locally
      get_url:
        url: "https://github.com/docker/compose/releases/download/{{ dockerComposeVersion }}/docker-compose-Linux-x86_64"
        dest: "files/tmp/docker-compose-{{ dockerComposeVersion }}"
      delegate_to: localhost

    - name: Copy Docker Compose binary
      copy:
        src: "files/tmp/docker-compose-{{ dockerComposeVersion }}"
        dest: /usr/local/bin/docker-compose
        mode: 0755

    - name: Prepare directories for Harbor
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - /data
        - /opt/app/conf/adminserver
        - /opt/app/conf/db

    - name: Protect binaries and configurations
      file:
        path: "{{ item }}"
        mode: u=rwx,g=rx,o=
        owner: 0
        group: 10000
        recurse: yes
      with_items:
        - /etc/confd
        - /opt

    - name: Clean up
      raw: |
        chown 0.999 /opt/app/conf/redis/redis.conf
        >/var/log/syslog
        >~/.bash_history && history -c
