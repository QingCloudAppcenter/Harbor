cat > /opt/app/conf/docker-compose.yml << DOCKER_COMPOSE_FILE
version: '2.3'
services:
  {{- if eq $nodeRole "log" }}
  log:
    image: goharbor/harbor-log:\$HARBOR_VERSION
    container_name: log
    restart: always
    networks:
      - harbor
    dns_search: .
    healthcheck:
      test: netstat -ltun | grep 10514
    ports:
      - 1514:10514
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    volumes:
      - /var/log/harbor/:/var/log/docker/:z
      - ./log/rsyslog.conf:/etc/rsyslog.d/rsyslog_docker.conf:z
    logging:
      driver: "syslog"
      options:
        tag: "harbor.log"
  {{- end }}
  {{- if eq $nodeRole "cache" }}
  redis:
    image: goharbor/redis-photon:\$HARBOR_VERSION
    container_name: redis
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    volumes:
      - /data/redis:/var/lib/redis
      - ./redis/redis.conf:/etc/redis.conf
    networks:
      - harbor
    dns_search: .
    healthcheck:
      test: netstat -ltun | grep 6379
    ports:
      - 6379:6379
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://log:1514"
        tag: "cache.redis"
  {{- end }}
  {{- if eq $nodeRole "db" }}
  postgresql:
    image: goharbor/harbor-db:\$HARBOR_VERSION
    container_name: db
    env_file:
      - ./db/env
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    volumes:
      - /data/database/app-1.2.0:/var/lib/postgresql/data:z
    networks:
      - harbor
    dns_search: .
    ports:
      - 5432:5432
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://log:1514"
        tag: "db.postgres"
  {{- end }}
  {{- range getvs "/host/role" | filter "web|job" }}
  registry:
    image: goharbor/registry-photon:v2.7.1-patch-2819-2553-\$HARBOR_VERSION
    container_name: registry
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    volumes:
      - dataDir:/storage
      - ./registry/:/etc/registry/:z
      - /data/secret/registry/root.crt:/etc/registry/root.crt:z
    networks:
      - harbor
    dns_search: .
    extra_hosts:
      - redis:{{ range getvs "/hosts/cache_node/*/ip" }}{{ . }}{{ end }}
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://log:1514"
        tag: "{{ $nodeRole }}.registry"
  registryctl:
    image: goharbor/harbor-registryctl:\$HARBOR_VERSION
    container_name: registryctl
    env_file:
      - ./registryctl/env
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    volumes:
      - dataDir:/storage
      - ./registry/:/etc/registry/:z
      - ./registryctl/config.yml:/etc/registryctl/config.yml:z
    networks:
      - harbor
    dns_search: .
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://log:1514"
        tag: "{{ $nodeRole }}.registryctl"
  core:
    image: goharbor/harbor-core:\$HARBOR_VERSION
    container_name: core
    env_file:
      - ./core/env
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
    volumes:
      - /data/ca_download/:/etc/core/ca/:z
      - /data/psc/:/etc/core/token/:z
      - /data/:/data/:z
      - dataDir:/data/registry
      - ./core/certificates/:/etc/core/certificates/:z
      - ./core/app.conf:/etc/core/app.conf:z
      - /data/secret/core/private_key.pem:/etc/core/private_key.pem:z
      - /data/secret/keys/secretkey:/etc/core/key:z
    networks:
      - harbor
    dns_search: .
    extra_hosts:
      - redis:{{ range getvs "/hosts/cache_node/*/ip" }}{{ . }}{{ end }}
      - postgresql:{{ range getvs "/hosts/db_node/*/ip" }}{{ . }}{{ end }}
      {{- range getvs "/hosts/job_node/*/ip" }}
      - jobservice:{{ . }}
      {{- end }}
    depends_on:
      - registry
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://log:1514"
        tag: "{{ $nodeRole }}.core"
  chartmuseum:
    container_name: chartmuseum
    image: goharbor/chartmuseum-photon:v0.9.0-\$HARBOR_VERSION
    env_file:
      ./chartserver/env
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    networks:
      - harbor
    dns_search: .
    extra_hosts:
      - redis:{{ range getvs "/hosts/cache_node/*/ip" }}{{ . }}{{ end }}
    volumes:
      {{- if len (ls "/hosts/storage_node") }}
      - dataDir:/chart_storage
      {{- end }}
      - ./chartserver/docker-entrypoint.sh:/docker-entrypoint.sh:z
      - ./chartserver:/etc/chartserver:z
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://log:1514"
        tag: "{{ $nodeRole }}.chartmuseum"
  {{- end }}
  {{- if eq $nodeRole "job" }}
  clair:
    container_name: clair
    image: goharbor/clair-photon:v2.1.0-\$HARBOR_VERSION
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    networks:
      - harbor
    cpu_quota: 50000
    dns_search: .
    extra_hosts:
      - "log:{{ range getvs "/hosts/log_node/*/ip" }}{{ . }}{{ end }}"
      - "redis:{{ range getvs "/hosts/cache_node/*/ip" }}{{ . }}{{ end }}"
      - "postgresql:{{ range getvs "/hosts/db_node/*/ip" }}{{ . }}{{ end }}"
    volumes:
      - type: bind
        source: /opt/app/conf/clair/config.yaml
        target: /etc/clair/config.yaml
    env_file:
      /opt/app/conf/clair/clair_env
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://log:1514"
        tag: "job.clair"
  jobservice:
    image: goharbor/harbor-jobservice:\$HARBOR_VERSION
    container_name: jobservice
    env_file:
      - ./jobservice/env
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    volumes:
      - jobLogs:/var/log/jobs
      - ./jobservice/config.yml:/etc/jobservice/config.yml:z
    networks:
      - harbor
    dns_search: .
    ports:
      - 8080:8080
    extra_hosts:
      - redis:{{ range getvs "/hosts/cache_node/*/ip" }}{{ . }}{{ end }}
      - postgresql:{{ range getvs "/hosts/db_node/*/ip" }}{{ . }}{{ end }}
    depends_on:
      - core
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://log:1514"
        tag: "job.jobservice"
  {{- end }}
  {{- if eq $nodeRole "web" }}
  portal:
    image: goharbor/harbor-portal:\$HARBOR_VERSION
    container_name: portal
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - NET_BIND_SERVICE
    networks:
      - harbor
    dns_search: .
    depends_on:
      - core
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://log:1514"
        tag: "web.portal"
  proxy:
    image: goharbor/nginx-photon:\$HARBOR_VERSION
    container_name: nginx
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - NET_BIND_SERVICE
    volumes:
      - ./nginx:/etc/nginx:z
    networks:
      - harbor
    dns_search: .
    ports:
      - 80:8080
    depends_on:
      - registry
      - core
      - portal
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://log:1514"
        tag: "web.proxy"
  {{- end }}
{{- range getvs "/host/role" | filter "web|job" }}
volumes:
  dataDir:
    driver: local
    driver_opts:
  {{- if len (ls "/hosts/storage_node") }}
      type: nfs4
      o: addr={{ range getvs "/hosts/storage_node/*/ip" }}{{ . }}{{ end }},rw
      device: ":/data/registry"
  {{- else }}
      type: none
      device: /data/registry
      o: bind
  {{- end }}
  {{- if eq $nodeRole "job" }}
  jobLogs:
    driver: local
    driver_opts:
      type: nfs4
      o: addr={{ range getvs "/hosts/log_node/*/ip" }}{{ . }}{{ end }},rw
      device: ":/var/log/harbor/job-logs"
  {{- end }}
{{- end }}
networks:
  harbor:
    external: false
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16
DOCKER_COMPOSE_FILE
